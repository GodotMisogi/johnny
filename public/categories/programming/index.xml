<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programming on ｢ALL FICTION｣</title>
    <link>https://godot-bloggy.xyz/categories/programming/</link>
    <description>Recent content in Programming on ｢ALL FICTION｣</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-uk</language>
    <lastBuildDate>Tue, 06 Apr 2021 21:53:06 +0530</lastBuildDate><atom:link href="https://godot-bloggy.xyz/categories/programming/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Nonlinear Dynamics — A Game of Computation (In Progress)</title>
      <link>https://godot-bloggy.xyz/post/nonlinear-dynamics/</link>
      <pubDate>Tue, 06 Apr 2021 21:53:06 +0530</pubDate>
      
      <guid>https://godot-bloggy.xyz/post/nonlinear-dynamics/</guid>
      <description>Volterra Equation Introduction The Volterra equation governs coupled population dynamics between two species under a predator-prey relationship in a given environment.
Consider $x$ as the number of rabbits, and $y$ as the number of foxes. This is expressed in the form of the following autonomous system of ordinary differential equations.
$$ \begin{aligned} \dot x &amp;amp; = \alpha x - \eta yx, &amp;amp; \alpha, \eta &amp;gt; 0 \\ \dot y &amp;amp; = -\beta y + \lambda xy, &amp;amp; \beta, \lambda &amp;gt; 0 \\ \end{aligned} $$</description>
    </item>
    
    <item>
      <title>Aerodynamics — Viscous-Inviscid Panel Methods (In Progress)</title>
      <link>https://godot-bloggy.xyz/post/panel-methods/</link>
      <pubDate>Wed, 24 Feb 2021 22:55:27 +0800</pubDate>
      
      <guid>https://godot-bloggy.xyz/post/panel-methods/</guid>
      <description>References  Drela, Mark. Flight Vehicle Aerodynamics. The MIT Press, 2014. Drela, Mark and Giles, M. B. Viscous-Inviscid Analysis of Transonic and Low Reynolds Number Airfoils. AIAA Journal, 1986. Katz, Joseph and Plotkin, Allen. Low-Speed Aerodynamics - 2nd Edition. Cambridge University Press, 2001.  Viscous-Inviscid Panel Methods Boundary element methods express the solution of some PDE on a volume by reducing it to the specification on a surface. Panel methods in aerodynamics are special cases of such expressions, in which the governing equation is Laplace&amp;rsquo;s equation in a uniform flow in the case of a steady, inviscid, incompressible fluid.</description>
    </item>
    
    <item>
      <title>Gradient-Based Optimisation — Discrete Direct and Adjoint Methods (In Progress)</title>
      <link>https://godot-bloggy.xyz/post/opt-problems/</link>
      <pubDate>Sun, 30 Aug 2020 22:55:27 +0800</pubDate>
      
      <guid>https://godot-bloggy.xyz/post/opt-problems/</guid>
      <description>Optimisation problems are becoming a big meme, so let&amp;rsquo;s address some of the general ideas and how to compute them for discretised systems of equations.
Problem Description Let the vector $\mathbf p_i \in \mathbb R^n$ be the state variable at the $i$th iteration, and the function as a matrix $\mathbf R \in \mathbb R^m \times \mathbb R^n$ which needs to be solved.
$$ \mathbf R(\mathbf p) = \mathbf 0 $$</description>
    </item>
    
    <item>
      <title>Computational Fluid Dynamics — CFDPython</title>
      <link>https://godot-bloggy.xyz/post/cfd-python/</link>
      <pubDate>Sat, 05 May 2018 16:54:58 +0530</pubDate>
      
      <guid>https://godot-bloggy.xyz/post/cfd-python/</guid>
      <description>This &amp;lsquo;notebook&amp;rsquo; consists of my run-through of Prof. Lorena Barba&amp;rsquo;s &amp;ldquo;12 steps to Navier-Stokes&amp;rdquo; course, because I admit I have a problem with fluids. The Navier-Stokes equations that will be solved in this notebook are the following in conservative form:
$$ \frac{\partial \rho}{\partial t} + \nabla \cdot \left(\rho V\right) = 0 $$
$$ \frac{\partial (\rho\vec V)}{\partial t} + \nabla \cdot \left(\rho ~\vec V \otimes \vec V + p\hat I \right) = \rho \vec g + \nabla \cdot \hat \tau + \vec f$$</description>
    </item>
    
    <item>
      <title>Dubby Pendy — A Double Pendulum Simulator</title>
      <link>https://godot-bloggy.xyz/post/dubby-pendy/</link>
      <pubDate>Tue, 27 Dec 2016 16:54:58 +0530</pubDate>
      
      <guid>https://godot-bloggy.xyz/post/dubby-pendy/</guid>
      <description>Learning about Lagrangian and Hamiltonian mechanics introduced me to an entirely new way of solving physics problems. The first time I&amp;rsquo;d read about this topic was in The Principle of Least Action chapter in Vol. 2 of The Feynman Lectures on Physics. I was introduced to a different perspective of viewing the physical world, perhaps a more general one than Newton&amp;rsquo;s laws.
A famous example of a system whose equations of motion can be more easily attained using Lagrangian or Hamiltonian mechanics is the double pendulum.</description>
    </item>
    
  </channel>
</rss>
